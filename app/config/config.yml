imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: api.yml }
    - { resource: parameters.php }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations: true }
    request: { converters: true }

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'AppBundle::form_div_layout.html.twig'

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ AppBundle]
    write_to:       "%kernel.root_dir%/../web/client/compiled"
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database.host%"
        port:     "%database.port%"
        dbname:   "%database.name%"
        user:     "%database.user%"
        password: "%database.password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailertransport%"
    host:      "%mailerhost%"
    username:  "%maileruser%"
    password:  "%mailerpassword%"
    spool:     { type: memory }

jms_serializer:
    metadata:
        auto_detection: true
        directories:
            FOSUserBundle:
                path: "@AppBundle/Resources/serializer/FOS"
                namespace_prefix: "FOS\\UserBundle"

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User
    service:
        mailer: fos_user.mailer.twig_swift
    from_email:
        address: "%maileruser%"
        sender_name: Equipe nicetruc
    registration:
        form:
            type: nicetruc_user_registration
            name: nicetruc_user_registration_form
        confirmation:
            enabled: true
    profile:
        form:
            type: nicetruc_user_profile
            name: nicetruc_user_profile_form
    change_password:
        form:
            type: nicetruc_user_change_password
            name: nicetrue_user_change_password_form
    group:
        group_class: AppBundle\Entity\Group



fos_rest:
    disable_csrf_role: ROLE_USER
    view:
        formats:
            json: true
            xml:  false
            html: true
        view_response_listener: force
    routing_loader:
        default_format: json
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json'], fallback_format: json, prefer_extension: true }
            - { path: '^/', priorities: ['html'], fallback_format: json, prefer_extension: true }
    body_converter:
        enabled: true
    param_fetcher_listener: true
    body_listener: true
    allowed_methods_listener: true
    format_listener: true



knp_gaufrette:
    stream_wrapper: ~

    adapters:
        nicetruc_storage_local:
            local:
                directory: %kernel.root_dir%/../web/client/app/images/voitures                     
        nicetruc_storage_s3:
            aws_s3:
                service_id: nicetruc.aws_s3.client
                bucket_name: '%awss3bucketname%'
                options:
                    create: true
    filesystems:
        nicetruc_storage_local:
            adapter: nicetruc_storage_local
        nicetruc_storage_s3:
            adapter: nicetruc_storage_s3
            alias: nicetruc_storage_s3_filesystem

aws:
    version: latest
    region: '%awss3region%'
    credentials:
        key: '%awss3key%'
        secret: '%awss3secretkey%'
    S3:
        version: '2006-03-01'
#srio_rest_upload:
#    storages:
#        default:
#            filesystem: gaufrette.uploads_filesystem
#
#    resumable_entity_class: ~
