# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:

    nicetruc.aws_s3.client:
        class: Aws\S3\S3Client
        factory_class: Aws\S3\S3Client
        factory_method: 'factory'
        arguments:
            -
                key: %aws_s3_key%
                secret: %aws_s3_secret_key%
                region: %aws_s3_region%
                version: latest

    nicetruc.user.class:
        class: AppBundle\Entity\User

    nicetruc.form.registration:
        class: AppBundle\Form\RegistrationType
        tags:
            - { name: form.type, alias: nicetruc_user_registration }

    nicetruc.form.profile:
        class: AppBundle\Form\ProfileFormType
        arguments: ["AppBundle\Entity\User"]
        tags:
            - { name: form.type, alias: nicetruc_user_profile }

    nicetruc.form.change.password:
        class: AppBundle\Form\ChangePasswordFormType
        arguments: ["AppBundle\Entity\User"]
        tags:
            - { name: form.type, alias: nicetruc_user_change_password }

    nicetruc.form.ville:
        class: AppBundle\Form\VilleType
        tags:
            - { name: form.type, alias: nicetruc_ville }

    nicetruc.form.ville:
        class: AppBundle\Form\VilleType
        tags:
            - { name: form.type, alias: nicetruc_ville }

    nicetruc.login.success.handler:
        class: AppBundle\Handler\LoginSuccessHandler
        arguments: [@security.token_storage,@security.authorization_checker,@router]

    nicetruc.login.failure.handler:
        class: AppBundle\Handler\LoginFailureHandler
        arguments: [@router]
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]

    wsse.security.authentication.provider:
        class: AppBundle\Security\Authentication\Provider\WsseProvider
        arguments: ["", "%kernel.cache_dir%/security/nonces"]
        public: false

    wsse.security.authentication.listener:
        class: AppBundle\Security\Firewall\WsseListener
        arguments: ["@security.token_storage", "@security.authentication.manager"]
        public: false

    nicetruc.namer.voiture:
        class: AppBundle\Naming\Namer

    nicetruc.listener.marquer:
        class: AppBundle\EventListener\CheckAuthorizationListener
        arguments: ["@security.authorization_checker", "@security.token_storage"]
        tags:
            - { name: kernel.event_listener, event: app.marque.pre_create, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.marque.pre_update, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.marque.pre_delete, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.ville.pre_create, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.ville.pre_update, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.ville.pre_delete, method: onCheckAuthorization}

            - { name: kernel.event_listener, event: app.quartier.pre_create, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.quartier.pre_update, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.quartier.pre_delete, method: onCheckAuthorization}

            - { name: kernel.event_listener, event: app.categorie.pre_create, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.categorie.pre_update, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.categorie.pre_delete, method: onCheckAuthorization}

            - { name: kernel.event_listener, event: app.boitier.pre_create, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.boitier.pre_update, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.boitier.pre_delete, method: onCheckAuthorization}

            - { name: kernel.event_listener, event: app.carburant.pre_create, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.carburant.pre_update, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.carburant.pre_delete, method: onCheckAuthorization}

            - { name: kernel.event_listener, event: app.modele.pre_create, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.modele.pre_update, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.modele.pre_delete, method: onCheckAuthorization}

            - { name: kernel.event_listener, event: app.modelemarque.pre_create, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.modelemarque.pre_update, method: onCheckAuthorization}
            - { name: kernel.event_listener, event: app.modelemarque.pre_delete, method: onCheckAuthorization}

            - { name: kernel.event_listener, event: app.voiture.pre_create, method: onCheckVoitureOwner}
            - { name: kernel.event_listener, event: app.voiture.pre_update, method: onCheckVoitureOwner}
            - { name: kernel.event_listener, event: app.voiture.pre_delete, method: onCheckVoitureOwner}

    nicetruc.listener.email_confirmation:
        class: AppBundle\EventListener\EmailConfirmationListener
        arguments: ["@fos_user.mailer.twig_swift", "@fos_user.util.token_generator", "@router", "@session"]
        tags:
            - { name: kernel.event_subscriber }